stages:
  - build
  - test
  - deploy

variables:
  APPLICATION_NAME: group-manager
  CONTAINER_REGISTRY: ${DOCKER_HUB_USERNAME}
  CONTAINER_IMAGE: ${CONTAINER_REGISTRY}/${APPLICATION_NAME}
  CONTAINER_IMAGE_TEST: ${CONTAINER_IMAGE}:test
  CONTAINER_IMAGE_LATEST: ${CONTAINER_IMAGE}:latest
  CONTAINER_IMAGE_TAGGED: ${CONTAINER_IMAGE}:${CI_COMMIT_SHORT_SHA}
  TEST_NETWORK: tdd
  TEST_DB: tdd-db
  K8S_INGRESS_DOMAIN: api.groups.maximemoreillon.com



# Needed for Docker in docker build
services:
  - name: docker:19.03.12-dind

build:
  stage: build
  tags:
    - dind
  before_script:
    # Docker hub login
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
  script:
    - echo {\"commit\":\"${CI_COMMIT_SHORT_SHA}\"} > commit.json
    - docker build -t ${CONTAINER_IMAGE_TEST} .
    - docker push ${CONTAINER_IMAGE_TEST}

test:
  stage: test
  tags:
    - dind
  before_script:
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
       # Creating network for TDD
    - docker network create ${TEST_NETWORK}
    # Creating DB container in network
    - >
      docker run
      -d
      --rm
      --name ${TEST_DB}
      --network ${TEST_NETWORK}
      --hostname ${TEST_DB}
      --env NEO4J_AUTH=none
      neo4j
    - sleep 100 # Wait for Neo4J to become available
    # Todo: Add user manager here

  script:
    # Run test
    - >
      docker run
      --rm
      --name tdd
      ${CONTAINER_IMAGE_TEST}
      npm run test
    # Tagging
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_TAGGED}
    - docker tag ${CONTAINER_IMAGE_TEST} ${CONTAINER_IMAGE_LATEST}
    # Pushing
    - docker push ${CONTAINER_IMAGE_TAGGED}
    - docker push ${CONTAINER_IMAGE_LATEST}

deploy:
  stage: deploy
  tags:
    - moreillon
  script:
    - envsubst < kubernetes/deployment.yml | kubectl apply -f -
  environment:
    name: production
    kubernetes:
      namespace: ${KUBERNETES_NAMESPACE}
