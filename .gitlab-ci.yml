stages:
  - containerization
  - deployment

variables:
  APPLICATION_NAME: group-manager
  DOCKER_IMAGE: ${DOCKER_HUB_USERNAME}/${APPLICATION_NAME}

containerization:
  stage: containerization
  tags:
    - moreillon
  script:
    # Docker hub login
    - echo "${DOCKER_HUB_PASSWORD}" | docker login --username ${DOCKER_HUB_USERNAME} --password-stdin
    # Build the docker image
    - docker build -t ${DOCKER_IMAGE} .
    - docker push ${DOCKER_IMAGE}
    # Cleanup
    - docker image rm ${DOCKER_IMAGE}

deployment:
  stage: deployment
  tags:
    - moreillon
  script:
    #- envsubst < kubernetes/deployment.yml | kubectl apply -f -
    - kubectl rollout restart deployment/${APPLICATION_NAME}
    # If a nodeport is specified, serve app through a nodeport service
    #- >
    #  if [ -z ${SERVICE_PORT} ];
    #  then echo "SERVICE_PORT not set, skipping creation of NodePort service";
    #  else envsubst < kubernetes/nodeport_service.yml | kubectl apply -f -;
    #  fi
    # if a domain name is specified, serve app through an ingress
    #- >
    #  if [ -z ${CERTIFICATE_DOMAIN} ];
    #  then echo "CERTIFICATE_DOMAIN not set, skipping creation of ingress";
    #  else envsubst < kubernetes/ingress.yml | kubectl apply -f -;
    #  fi
  environment:
    name: production
    kubernetes:
      namespace: ${KUBERNETES_NAMESPACE}
